/*
 * main_SPI.c
 *
 *  Created on: Dec 28, 2023
 *      Author: pc
 */
#include <stm32f446xx.h>
#include <stm32f446xx_spi_driver.h>
#include <stm32f446xx_gpio_driver.h>
#include <string.h>

	SPI_Config_t hspi1;
// Alternate function mode: 5
/* 
 * SPI1 pin configuration
 * PA4 ---> NSS 
 * PA5 ---> SCK
 * PA6 ---> MISO
 * PA7 ---> MOSI 
 */
void GPIO_INIT(void);
void SPI_INIT(void);



int main(void)
{

	char buffer[]= "Hello World";
    GPIO_INIT();
    SPI_INIT();
    DRV_SPI_PeripheralControl(SPI1, ENABLE);
    
    while(1)
    {
        DRV_SPI_Tx(SPI1,(uint8_t*) buffer, strlen(buffer));
    }
	return 0;
}

void GPIO_INIT(void)
{
    GPIO_PinConfig_t SpiGPIO ;
    SpiGPIO.PinMode = GPIO_ALTERNATE;
    SpiGPIO.PinAltFunction = 5;
    SpiGPIO.PinOPType = PushPull;
    SpiGPIO.PinPUPDCtrl = NoPUPD;
    SpiGPIO.PinSpeed = FAST;
    // NSS
    SpiGPIO.PinNumber = GPIO_PIN_4;
    DRV_GPIO_Init(GPIOA, &SpiGPIO);

    // SCK
    SpiGPIO.PinNumber = GPIO_PIN_5;
    DRV_GPIO_Init(GPIOA, &SpiGPIO);

    // MISO
    SpiGPIO.PinNumber = GPIO_PIN_6;
    DRV_GPIO_Init(GPIOA, &SpiGPIO);  

    // MOSI
    SpiGPIO.PinNumber = GPIO_PIN_7;
    DRV_GPIO_Init(GPIOA, &SpiGPIO);

}

void SPI_INIT(void)
{ 
    hspi1.SPI_BusConfig = FullDuplex;
    hspi1.SPI_DeviceMode = MASTER;
    hspi1.SPI_SClkSpeed = DIV_2; // generate 8MHz
    hspi1.SPI_DFF = DFF_8BITS;
    hspi1.SPI_CPOL = CPOL_L;
    hspi1.SPI_CPHA = CPHA_L;
    hspi1.SPI_SSM = SSM_DI; // SW management disable
    DRV_SPI_Init(SPI1, &hspi1);
}
